version: '3.8'

services:
  fastapi_server:
    container_name: fastapi_server_${PROJECT_NAME}
    build: 
      context: .
      dockerfile: ./backend/Dockerfile
    restart: always
    volumes:
      - ./backend:/code
    expose:
      - 8000
    env_file: .env
    depends_on:
      - database
    links:
      - caddy_reverse_proxy:storage.localhost

  database:
    image: bitnami/postgresql
    restart: always
    container_name: database_${PROJECT_NAME}
    env_file: ".env"
    user: root
    volumes:
      - db_docker:/bitnami/postgresql
      - ./database/create-dbs.sql:/docker-entrypoint-initdb.d/create-dbs.sql
    # ports:
    #   - 5454:5432 # Remove this on production
    expose:
      - 5432

  redis_server:
    image: redis:alpine
    container_name: redis_server_${PROJECT_NAME}    
    restart: always
    expose:
      - 6379
    env_file: .env

  celery_worker:
    container_name: celery_worker_${PROJECT_NAME}
    restart: always
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    command: "watchfiles 'celery -A travel_ai_backend.app.core.celery worker -l info' "
    volumes:
      - ./backend:/code
    depends_on:
      - database
      - redis_server
    env_file: .env
  
  celery_beat:  #Good for crontab and schedule tasks
    container_name: celery_beat_${PROJECT_NAME}
    restart: always
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    command: celery -A travel_ai_backend.app.core.celery beat -l info -S celery_sqlalchemy_scheduler.schedulers:DatabaseScheduler -l info
    volumes:
      - ./backend:/code
    depends_on:
      - database
      - redis_server
    env_file: .env

  dashboard:
    container_name: flower_${PROJECT_NAME}
    build: 
      context: ./flower
    command: celery --broker=redis://redis_server:6379/0 flower --port=5555
    # ports:
    #   - 5556:5555
    expose:
      - 5555
    environment:
      - CELERY_BROKER_URL=redis_server://redis:6379/0
      - CELERY_RESULT_BACKEND=redis_server://redis:6379/0
    depends_on:
      - database
      - redis_server
      - celery_worker

  elastic_search:
    container_name: elastic_search_${PROJECT_NAME}
    image: elasticsearch:8.17.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    # ports:
    #   - 9200:9200
    expose:
      - 9200
      - 9300

  kibana:
    container_name: kibana_${PROJECT_NAME}
    image: kibana:8.16.4
    environment:
      - "ELASTICSEARCH_HOSTS=http://elastic_search:9200"
    depends_on:
      - elastic_search
    expose:
      - 5601
      
  minio_server:
    image: minio/minio:latest
    restart: always
    container_name: minio_server_${PROJECT_NAME}
    volumes:
      - ./minio/data:/data
    expose:
      - 9000
      - 9091
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BROWSER_REDIRECT_URL: http://stash.localhost
    command: "server /data --console-address ':9090'"    

  caddy_reverse_proxy:
    container_name: caddy_reverse_proxy_${PROJECT_NAME}
    image: caddy:alpine
    restart: always
    ports:
      - 85:80      
      - 443:443
    environment:
      - EXT_ENDPOINT1=${EXT_ENDPOINT1}
      - LOCAL_1=${LOCAL_1}
      - LOCAL_2=${LOCAL_2}
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./static:/code/static
      - caddy_data:/data
      - caddy_config:/config

volumes:
  db_docker:
  caddy_data:
  caddy_config: